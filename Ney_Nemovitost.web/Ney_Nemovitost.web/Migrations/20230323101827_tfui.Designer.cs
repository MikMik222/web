// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ney_Nemovitost.web.Models.Database;

#nullable disable

namespace Ney_Nemovitost.web.Migrations
{
    [DbContext(typeof(NemovitostDBContext))]
    [Migration("20230323101827_tfui")]
    partial class tfui
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ClaimType")
                        .HasColumnType("longtext");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Value")
                        .HasColumnType("longtext");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.DispoziceNemovitosti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Dispozice")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("DispoziceNemovitosti");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Dispozice = "Garsoniéra"
                        },
                        new
                        {
                            ID = 2,
                            Dispozice = "1+kk"
                        },
                        new
                        {
                            ID = 3,
                            Dispozice = "1+1"
                        },
                        new
                        {
                            ID = 4,
                            Dispozice = "2+kk"
                        },
                        new
                        {
                            ID = 5,
                            Dispozice = "2+1"
                        },
                        new
                        {
                            ID = 6,
                            Dispozice = "3+kk"
                        },
                        new
                        {
                            ID = 7,
                            Dispozice = "3+1"
                        },
                        new
                        {
                            ID = 8,
                            Dispozice = "4+kk"
                        },
                        new
                        {
                            ID = 9,
                            Dispozice = "4+1"
                        },
                        new
                        {
                            ID = 10,
                            Dispozice = "5+kk"
                        },
                        new
                        {
                            ID = 11,
                            Dispozice = "5+1"
                        },
                        new
                        {
                            ID = 12,
                            Dispozice = "6+kk"
                        },
                        new
                        {
                            ID = 13,
                            Dispozice = "6+1"
                        },
                        new
                        {
                            ID = 14,
                            Dispozice = "7+kk"
                        },
                        new
                        {
                            ID = 15,
                            Dispozice = "7+1"
                        },
                        new
                        {
                            ID = 16,
                            Dispozice = "Ostatní"
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.EnerNarocnostNemovitosti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EnerNárocnost")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("EnerNarocnostNemovitosti");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            EnerNárocnost = "A"
                        },
                        new
                        {
                            ID = 2,
                            EnerNárocnost = "B"
                        },
                        new
                        {
                            ID = 3,
                            EnerNárocnost = "C"
                        },
                        new
                        {
                            ID = 4,
                            EnerNárocnost = "D"
                        },
                        new
                        {
                            ID = 5,
                            EnerNárocnost = "E"
                        },
                        new
                        {
                            ID = 6,
                            EnerNárocnost = "F"
                        },
                        new
                        {
                            ID = 7,
                            EnerNárocnost = "G"
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.FotoNem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Id_Nemo")
                        .HasColumnType("int");

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("Id_Nemo");

                    b.ToTable("FotoNem");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.HistorieCen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("cenaPlatnaOd")
                        .HasColumnType("date");

                    b.Property<int>("idNemovitosti")
                        .HasColumnType("int");

                    b.Property<int>("idSluzby")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("idNemovitosti");

                    b.HasIndex("idSluzby");

                    b.ToTable("HistorieCen");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.KostrukceNemovitosti", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Konstrukce")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("KostrukceNemovitosti");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Konstrukce = "Dřevostavba"
                        },
                        new
                        {
                            ID = 2,
                            Konstrukce = "Cihla"
                        },
                        new
                        {
                            ID = 3,
                            Konstrukce = "Panel"
                        },
                        new
                        {
                            ID = 4,
                            Konstrukce = "Nizkoenergetický"
                        },
                        new
                        {
                            ID = 5,
                            Konstrukce = "Ostatní"
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelAdresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Obec")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Psc")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("UliceACisloPop")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AdresaVlastniku");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelDodatek", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SrcToFile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("idNemovitost")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Dodatky");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelNemovitost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("cenaEnergii")
                        .HasColumnType("double");

                    b.Property<double>("cenaNajmu")
                        .HasColumnType("double");

                    b.Property<double>("cenaSluzeb")
                        .HasColumnType("double");

                    b.Property<DateOnly>("dostupnostOd")
                        .HasColumnType("date");

                    b.Property<int>("idAdresa")
                        .HasColumnType("int");

                    b.Property<int>("idDizpozice")
                        .HasColumnType("int");

                    b.Property<int>("idEneNarocnosti")
                        .HasColumnType("int");

                    b.Property<int>("idTypBudovy")
                        .HasColumnType("int");

                    b.Property<int>("idVlastnik")
                        .HasColumnType("int");

                    b.Property<double>("plocha")
                        .HasColumnType("double");

                    b.Property<bool>("vybavenost")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ID");

                    b.HasIndex("idAdresa");

                    b.HasIndex("idDizpozice");

                    b.HasIndex("idEneNarocnosti");

                    b.HasIndex("idTypBudovy");

                    b.HasIndex("idVlastnik");

                    b.ToTable("Nemovitos");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelSmlouva", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("SrcToFile")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("aktivni")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("idNajemnik")
                        .HasColumnType("int");

                    b.Property<int>("idNemovitost")
                        .HasColumnType("int");

                    b.Property<int>("idVlastnik")
                        .HasColumnType("int");

                    b.Property<DateOnly>("platnaDo")
                        .HasColumnType("date");

                    b.Property<DateOnly>("platnaOd")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex("idNajemnik");

                    b.ToTable("Smlouva");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelZavady", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<double>("cenaOpravy")
                        .HasColumnType("double");

                    b.Property<DateOnly>("datumNahlaseni")
                        .HasColumnType("date");

                    b.Property<DateOnly>("datumOpravy")
                        .HasColumnType("date");

                    b.Property<int>("idNajemnik")
                        .HasColumnType("int");

                    b.Property<int>("idNemovitost")
                        .HasColumnType("int");

                    b.Property<int>("idmajitel")
                        .HasColumnType("int");

                    b.Property<string>("nazevOpravare")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("popisOpravy")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("popisZavady")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.HasIndex("idNajemnik");

                    b.HasIndex("idNemovitost");

                    b.HasIndex("idmajitel");

                    b.ToTable("Zavady");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.MoznostiSluzeb", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NazevSluzby")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("ID");

                    b.ToTable("MoznostiSluzeb");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NazevSluzby = "Cena nájmu"
                        },
                        new
                        {
                            ID = 2,
                            NazevSluzby = "Cena energie"
                        },
                        new
                        {
                            ID = 3,
                            NazevSluzby = "Cena služeb"
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.Najemnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateOnly>("datumNarozeni")
                        .HasColumnType("date");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("idAdresa")
                        .HasColumnType("int");

                    b.Property<int>("idPredvolby")
                        .HasColumnType("int");

                    b.Property<string>("jmeno")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("prijmeni")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("rodneCislo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("telefon")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("vlastnikID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("idAdresa");

                    b.HasIndex("idPredvolby");

                    b.ToTable("Najemnik");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.OptionNemovitost", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Volba")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("VolbaJinyPad")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("OptionNemovitost");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Volba = "Byt",
                            VolbaJinyPad = "Bytu"
                        },
                        new
                        {
                            ID = 2,
                            Volba = "Dům",
                            VolbaJinyPad = "Domu"
                        },
                        new
                        {
                            ID = 3,
                            Volba = "Pozemek",
                            VolbaJinyPad = "Pozemku"
                        },
                        new
                        {
                            ID = 4,
                            Volba = "Garáž",
                            VolbaJinyPad = "Garáži"
                        },
                        new
                        {
                            ID = 5,
                            Volba = "Kancelář",
                            VolbaJinyPad = "Kanceláře"
                        },
                        new
                        {
                            ID = 6,
                            Volba = "Nebytový prostor",
                            VolbaJinyPad = "Nebytového prostoru"
                        },
                        new
                        {
                            ID = 7,
                            Volba = "Chaty a chalupy",
                            VolbaJinyPad = "chaty a chalupy"
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.Predvolby", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("NameCountry")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("predvolba")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("Predvolby");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NameCountry = "Afghanistan",
                            predvolba = 93
                        },
                        new
                        {
                            ID = 2,
                            NameCountry = "Aland Islands",
                            predvolba = 358
                        },
                        new
                        {
                            ID = 3,
                            NameCountry = "Albania",
                            predvolba = 355
                        },
                        new
                        {
                            ID = 4,
                            NameCountry = "Algeria",
                            predvolba = 213
                        },
                        new
                        {
                            ID = 5,
                            NameCountry = "American Samoa",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 6,
                            NameCountry = "Andorra",
                            predvolba = 376
                        },
                        new
                        {
                            ID = 7,
                            NameCountry = "Angola",
                            predvolba = 244
                        },
                        new
                        {
                            ID = 8,
                            NameCountry = "Anguilla",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 9,
                            NameCountry = "Antigua and Barbuda",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 10,
                            NameCountry = "Argentina",
                            predvolba = 54
                        },
                        new
                        {
                            ID = 11,
                            NameCountry = "Armenia",
                            predvolba = 374
                        },
                        new
                        {
                            ID = 12,
                            NameCountry = "Aruba",
                            predvolba = 297
                        },
                        new
                        {
                            ID = 13,
                            NameCountry = "Australia",
                            predvolba = 61
                        },
                        new
                        {
                            ID = 14,
                            NameCountry = "Austria",
                            predvolba = 43
                        },
                        new
                        {
                            ID = 15,
                            NameCountry = "Azerbaijan",
                            predvolba = 994
                        },
                        new
                        {
                            ID = 16,
                            NameCountry = "Bahamas",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 17,
                            NameCountry = "Bahrain",
                            predvolba = 973
                        },
                        new
                        {
                            ID = 18,
                            NameCountry = "Bangladesh",
                            predvolba = 880
                        },
                        new
                        {
                            ID = 19,
                            NameCountry = "Barbados",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 20,
                            NameCountry = "Belarus",
                            predvolba = 375
                        },
                        new
                        {
                            ID = 21,
                            NameCountry = "Belgium",
                            predvolba = 32
                        },
                        new
                        {
                            ID = 22,
                            NameCountry = "Belize",
                            predvolba = 501
                        },
                        new
                        {
                            ID = 23,
                            NameCountry = "Benin",
                            predvolba = 229
                        },
                        new
                        {
                            ID = 24,
                            NameCountry = "Bermuda",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 25,
                            NameCountry = "Bhutan",
                            predvolba = 975
                        },
                        new
                        {
                            ID = 26,
                            NameCountry = "Bolivia",
                            predvolba = 591
                        },
                        new
                        {
                            ID = 27,
                            NameCountry = "Bonaire, Sint Eustatius and Saba",
                            predvolba = 599
                        },
                        new
                        {
                            ID = 28,
                            NameCountry = "Bosnia and Herzegovina",
                            predvolba = 387
                        },
                        new
                        {
                            ID = 29,
                            NameCountry = "Botswana",
                            predvolba = 267
                        },
                        new
                        {
                            ID = 30,
                            NameCountry = "Brazil",
                            predvolba = 55
                        },
                        new
                        {
                            ID = 31,
                            NameCountry = "British Indian Ocean Territory",
                            predvolba = 246
                        },
                        new
                        {
                            ID = 32,
                            NameCountry = "British Virgin Islands",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 33,
                            NameCountry = "Brunei",
                            predvolba = 673
                        },
                        new
                        {
                            ID = 34,
                            NameCountry = "Bulgaria",
                            predvolba = 359
                        },
                        new
                        {
                            ID = 35,
                            NameCountry = "Burkina Faso",
                            predvolba = 226
                        },
                        new
                        {
                            ID = 36,
                            NameCountry = "Burundi",
                            predvolba = 257
                        },
                        new
                        {
                            ID = 37,
                            NameCountry = "Cabo Verde",
                            predvolba = 238
                        },
                        new
                        {
                            ID = 38,
                            NameCountry = "Cambodia",
                            predvolba = 855
                        },
                        new
                        {
                            ID = 39,
                            NameCountry = "Cameroon",
                            predvolba = 237
                        },
                        new
                        {
                            ID = 40,
                            NameCountry = "Canada",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 41,
                            NameCountry = "Caribbean",
                            predvolba = 0
                        },
                        new
                        {
                            ID = 42,
                            NameCountry = "Cayman Islands",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 43,
                            NameCountry = "Central African Republic",
                            predvolba = 236
                        },
                        new
                        {
                            ID = 44,
                            NameCountry = "Chad",
                            predvolba = 235
                        },
                        new
                        {
                            ID = 45,
                            NameCountry = "Chile",
                            predvolba = 56
                        },
                        new
                        {
                            ID = 46,
                            NameCountry = "China",
                            predvolba = 86
                        },
                        new
                        {
                            ID = 47,
                            NameCountry = "Christmas Island",
                            predvolba = 61
                        },
                        new
                        {
                            ID = 48,
                            NameCountry = "Cocos (Keeling) Islands",
                            predvolba = 61
                        },
                        new
                        {
                            ID = 49,
                            NameCountry = "Colombia",
                            predvolba = 57
                        },
                        new
                        {
                            ID = 50,
                            NameCountry = "Comoros",
                            predvolba = 269
                        },
                        new
                        {
                            ID = 51,
                            NameCountry = "Congo",
                            predvolba = 242
                        },
                        new
                        {
                            ID = 52,
                            NameCountry = "Congo (DRC)",
                            predvolba = 243
                        },
                        new
                        {
                            ID = 53,
                            NameCountry = "Cook Islands",
                            predvolba = 682
                        },
                        new
                        {
                            ID = 54,
                            NameCountry = "Costa Rica",
                            predvolba = 506
                        },
                        new
                        {
                            ID = 55,
                            NameCountry = "CĂ´te dâ€™Ivoire",
                            predvolba = 225
                        },
                        new
                        {
                            ID = 56,
                            NameCountry = "Croatia",
                            predvolba = 385
                        },
                        new
                        {
                            ID = 57,
                            NameCountry = "Cuba",
                            predvolba = 53
                        },
                        new
                        {
                            ID = 58,
                            NameCountry = "CuraĂ§ao",
                            predvolba = 599
                        },
                        new
                        {
                            ID = 59,
                            NameCountry = "Cyprus",
                            predvolba = 357
                        },
                        new
                        {
                            ID = 60,
                            NameCountry = "Czechia",
                            predvolba = 420
                        },
                        new
                        {
                            ID = 61,
                            NameCountry = "Denmark",
                            predvolba = 45
                        },
                        new
                        {
                            ID = 62,
                            NameCountry = "Djibouti",
                            predvolba = 253
                        },
                        new
                        {
                            ID = 63,
                            NameCountry = "Dominica",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 64,
                            NameCountry = "Dominican Republic",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 65,
                            NameCountry = "Ecuador",
                            predvolba = 593
                        },
                        new
                        {
                            ID = 66,
                            NameCountry = "Egypt",
                            predvolba = 20
                        },
                        new
                        {
                            ID = 67,
                            NameCountry = "El Salvador",
                            predvolba = 503
                        },
                        new
                        {
                            ID = 68,
                            NameCountry = "Equatorial Guinea",
                            predvolba = 240
                        },
                        new
                        {
                            ID = 69,
                            NameCountry = "Eritrea",
                            predvolba = 291
                        },
                        new
                        {
                            ID = 70,
                            NameCountry = "Estonia",
                            predvolba = 372
                        },
                        new
                        {
                            ID = 71,
                            NameCountry = "Ethiopia",
                            predvolba = 251
                        },
                        new
                        {
                            ID = 72,
                            NameCountry = "Europe",
                            predvolba = 0
                        },
                        new
                        {
                            ID = 73,
                            NameCountry = "Falkland Islands",
                            predvolba = 500
                        },
                        new
                        {
                            ID = 74,
                            NameCountry = "Faroe Islands",
                            predvolba = 298
                        },
                        new
                        {
                            ID = 75,
                            NameCountry = "Fiji",
                            predvolba = 679
                        },
                        new
                        {
                            ID = 76,
                            NameCountry = "Finland",
                            predvolba = 358
                        },
                        new
                        {
                            ID = 77,
                            NameCountry = "France",
                            predvolba = 33
                        },
                        new
                        {
                            ID = 78,
                            NameCountry = "French Guiana",
                            predvolba = 594
                        },
                        new
                        {
                            ID = 79,
                            NameCountry = "French Polynesia",
                            predvolba = 689
                        },
                        new
                        {
                            ID = 80,
                            NameCountry = "Gabon",
                            predvolba = 241
                        },
                        new
                        {
                            ID = 81,
                            NameCountry = "Gambia",
                            predvolba = 220
                        },
                        new
                        {
                            ID = 82,
                            NameCountry = "Georgia",
                            predvolba = 995
                        },
                        new
                        {
                            ID = 83,
                            NameCountry = "Germany",
                            predvolba = 49
                        },
                        new
                        {
                            ID = 84,
                            NameCountry = "Ghana",
                            predvolba = 233
                        },
                        new
                        {
                            ID = 85,
                            NameCountry = "Gibraltar",
                            predvolba = 350
                        },
                        new
                        {
                            ID = 86,
                            NameCountry = "Greece",
                            predvolba = 30
                        },
                        new
                        {
                            ID = 87,
                            NameCountry = "Greenland",
                            predvolba = 299
                        },
                        new
                        {
                            ID = 88,
                            NameCountry = "Grenada",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 89,
                            NameCountry = "Guadeloupe",
                            predvolba = 590
                        },
                        new
                        {
                            ID = 90,
                            NameCountry = "Guam",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 91,
                            NameCountry = "Guatemala",
                            predvolba = 502
                        },
                        new
                        {
                            ID = 92,
                            NameCountry = "Guernsey",
                            predvolba = 44
                        },
                        new
                        {
                            ID = 93,
                            NameCountry = "Guinea",
                            predvolba = 224
                        },
                        new
                        {
                            ID = 94,
                            NameCountry = "Guinea-Bissau",
                            predvolba = 245
                        },
                        new
                        {
                            ID = 95,
                            NameCountry = "Guyana",
                            predvolba = 592
                        },
                        new
                        {
                            ID = 96,
                            NameCountry = "Haiti",
                            predvolba = 509
                        },
                        new
                        {
                            ID = 97,
                            NameCountry = "Honduras",
                            predvolba = 504
                        },
                        new
                        {
                            ID = 98,
                            NameCountry = "Hong Kong SAR",
                            predvolba = 852
                        },
                        new
                        {
                            ID = 99,
                            NameCountry = "Hungary",
                            predvolba = 36
                        },
                        new
                        {
                            ID = 100,
                            NameCountry = "Iceland",
                            predvolba = 354
                        },
                        new
                        {
                            ID = 101,
                            NameCountry = "India",
                            predvolba = 91
                        },
                        new
                        {
                            ID = 102,
                            NameCountry = "Indonesia",
                            predvolba = 62
                        },
                        new
                        {
                            ID = 103,
                            NameCountry = "Iran",
                            predvolba = 98
                        },
                        new
                        {
                            ID = 104,
                            NameCountry = "Iraq",
                            predvolba = 964
                        },
                        new
                        {
                            ID = 105,
                            NameCountry = "Ireland",
                            predvolba = 353
                        },
                        new
                        {
                            ID = 106,
                            NameCountry = "Isle of Man",
                            predvolba = 44
                        },
                        new
                        {
                            ID = 107,
                            NameCountry = "Israel",
                            predvolba = 972
                        },
                        new
                        {
                            ID = 108,
                            NameCountry = "Italy",
                            predvolba = 39
                        },
                        new
                        {
                            ID = 109,
                            NameCountry = "Jamaica",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 110,
                            NameCountry = "Japan",
                            predvolba = 81
                        },
                        new
                        {
                            ID = 111,
                            NameCountry = "Jersey",
                            predvolba = 44
                        },
                        new
                        {
                            ID = 112,
                            NameCountry = "Jordan",
                            predvolba = 962
                        },
                        new
                        {
                            ID = 113,
                            NameCountry = "Kazakhstan",
                            predvolba = 7
                        },
                        new
                        {
                            ID = 114,
                            NameCountry = "Kenya",
                            predvolba = 254
                        },
                        new
                        {
                            ID = 115,
                            NameCountry = "Kiribati",
                            predvolba = 686
                        },
                        new
                        {
                            ID = 116,
                            NameCountry = "Korea",
                            predvolba = 82
                        },
                        new
                        {
                            ID = 117,
                            NameCountry = "Kosovo",
                            predvolba = 383
                        },
                        new
                        {
                            ID = 118,
                            NameCountry = "Kuwait",
                            predvolba = 965
                        },
                        new
                        {
                            ID = 119,
                            NameCountry = "Kyrgyzstan",
                            predvolba = 996
                        },
                        new
                        {
                            ID = 120,
                            NameCountry = "Laos",
                            predvolba = 856
                        },
                        new
                        {
                            ID = 121,
                            NameCountry = "Latin America",
                            predvolba = 0
                        },
                        new
                        {
                            ID = 122,
                            NameCountry = "Latvia",
                            predvolba = 371
                        },
                        new
                        {
                            ID = 123,
                            NameCountry = "Lebanon",
                            predvolba = 961
                        },
                        new
                        {
                            ID = 124,
                            NameCountry = "Lesotho",
                            predvolba = 266
                        },
                        new
                        {
                            ID = 125,
                            NameCountry = "Liberia",
                            predvolba = 231
                        },
                        new
                        {
                            ID = 126,
                            NameCountry = "Libya",
                            predvolba = 218
                        },
                        new
                        {
                            ID = 127,
                            NameCountry = "Liechtenstein",
                            predvolba = 423
                        },
                        new
                        {
                            ID = 128,
                            NameCountry = "Lithuania",
                            predvolba = 370
                        },
                        new
                        {
                            ID = 129,
                            NameCountry = "Luxembourg",
                            predvolba = 352
                        },
                        new
                        {
                            ID = 130,
                            NameCountry = "Macao SAR",
                            predvolba = 853
                        },
                        new
                        {
                            ID = 131,
                            NameCountry = "Macedonia, FYRO",
                            predvolba = 389
                        },
                        new
                        {
                            ID = 132,
                            NameCountry = "Madagascar",
                            predvolba = 261
                        },
                        new
                        {
                            ID = 133,
                            NameCountry = "Malawi",
                            predvolba = 265
                        },
                        new
                        {
                            ID = 134,
                            NameCountry = "Malaysia",
                            predvolba = 60
                        },
                        new
                        {
                            ID = 135,
                            NameCountry = "Maldives",
                            predvolba = 960
                        },
                        new
                        {
                            ID = 136,
                            NameCountry = "Mali",
                            predvolba = 223
                        },
                        new
                        {
                            ID = 137,
                            NameCountry = "Malta",
                            predvolba = 356
                        },
                        new
                        {
                            ID = 138,
                            NameCountry = "Marshall Islands",
                            predvolba = 692
                        },
                        new
                        {
                            ID = 139,
                            NameCountry = "Martinique",
                            predvolba = 596
                        },
                        new
                        {
                            ID = 140,
                            NameCountry = "Mauritania",
                            predvolba = 222
                        },
                        new
                        {
                            ID = 141,
                            NameCountry = "Mauritius",
                            predvolba = 230
                        },
                        new
                        {
                            ID = 142,
                            NameCountry = "Mayotte",
                            predvolba = 262
                        },
                        new
                        {
                            ID = 143,
                            NameCountry = "Mexico",
                            predvolba = 52
                        },
                        new
                        {
                            ID = 144,
                            NameCountry = "Micronesia",
                            predvolba = 691
                        },
                        new
                        {
                            ID = 145,
                            NameCountry = "Moldova",
                            predvolba = 373
                        },
                        new
                        {
                            ID = 146,
                            NameCountry = "Monaco",
                            predvolba = 377
                        },
                        new
                        {
                            ID = 147,
                            NameCountry = "Mongolia",
                            predvolba = 976
                        },
                        new
                        {
                            ID = 148,
                            NameCountry = "Montenegro",
                            predvolba = 382
                        },
                        new
                        {
                            ID = 149,
                            NameCountry = "Montserrat",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 150,
                            NameCountry = "Morocco",
                            predvolba = 212
                        },
                        new
                        {
                            ID = 151,
                            NameCountry = "Mozambique",
                            predvolba = 258
                        },
                        new
                        {
                            ID = 152,
                            NameCountry = "Myanmar",
                            predvolba = 95
                        },
                        new
                        {
                            ID = 153,
                            NameCountry = "Namibia",
                            predvolba = 264
                        },
                        new
                        {
                            ID = 154,
                            NameCountry = "Nauru",
                            predvolba = 674
                        },
                        new
                        {
                            ID = 155,
                            NameCountry = "Nepal",
                            predvolba = 977
                        },
                        new
                        {
                            ID = 156,
                            NameCountry = "Netherlands",
                            predvolba = 31
                        },
                        new
                        {
                            ID = 157,
                            NameCountry = "New Caledonia",
                            predvolba = 687
                        },
                        new
                        {
                            ID = 158,
                            NameCountry = "New Zealand",
                            predvolba = 64
                        },
                        new
                        {
                            ID = 159,
                            NameCountry = "Nicaragua",
                            predvolba = 505
                        },
                        new
                        {
                            ID = 160,
                            NameCountry = "Niger",
                            predvolba = 227
                        },
                        new
                        {
                            ID = 161,
                            NameCountry = "Nigeria",
                            predvolba = 234
                        },
                        new
                        {
                            ID = 162,
                            NameCountry = "Niue",
                            predvolba = 683
                        },
                        new
                        {
                            ID = 163,
                            NameCountry = "Norfolk Island",
                            predvolba = 672
                        },
                        new
                        {
                            ID = 164,
                            NameCountry = "North Korea",
                            predvolba = 850
                        },
                        new
                        {
                            ID = 165,
                            NameCountry = "Northern Mariana Islands",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 166,
                            NameCountry = "Norway",
                            predvolba = 47
                        },
                        new
                        {
                            ID = 167,
                            NameCountry = "Oman",
                            predvolba = 968
                        },
                        new
                        {
                            ID = 168,
                            NameCountry = "Pakistan",
                            predvolba = 92
                        },
                        new
                        {
                            ID = 169,
                            NameCountry = "Palau",
                            predvolba = 680
                        },
                        new
                        {
                            ID = 170,
                            NameCountry = "Palestinian Authority",
                            predvolba = 970
                        },
                        new
                        {
                            ID = 171,
                            NameCountry = "Panama",
                            predvolba = 507
                        },
                        new
                        {
                            ID = 172,
                            NameCountry = "Papua New Guinea",
                            predvolba = 675
                        },
                        new
                        {
                            ID = 173,
                            NameCountry = "Paraguay",
                            predvolba = 595
                        },
                        new
                        {
                            ID = 174,
                            NameCountry = "Peru",
                            predvolba = 51
                        },
                        new
                        {
                            ID = 175,
                            NameCountry = "Philippines",
                            predvolba = 63
                        },
                        new
                        {
                            ID = 176,
                            NameCountry = "Pitcairn Islands",
                            predvolba = 0
                        },
                        new
                        {
                            ID = 177,
                            NameCountry = "Poland",
                            predvolba = 48
                        },
                        new
                        {
                            ID = 178,
                            NameCountry = "Portugal",
                            predvolba = 351
                        },
                        new
                        {
                            ID = 179,
                            NameCountry = "Puerto Rico",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 180,
                            NameCountry = "Qatar",
                            predvolba = 974
                        },
                        new
                        {
                            ID = 181,
                            NameCountry = "RĂ©union",
                            predvolba = 262
                        },
                        new
                        {
                            ID = 182,
                            NameCountry = "Romania",
                            predvolba = 40
                        },
                        new
                        {
                            ID = 183,
                            NameCountry = "Russia",
                            predvolba = 7
                        },
                        new
                        {
                            ID = 184,
                            NameCountry = "Rwanda",
                            predvolba = 250
                        },
                        new
                        {
                            ID = 185,
                            NameCountry = "Saint BarthĂ©lemy",
                            predvolba = 590
                        },
                        new
                        {
                            ID = 186,
                            NameCountry = "Saint Kitts and Nevis",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 187,
                            NameCountry = "Saint Lucia",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 188,
                            NameCountry = "Saint Martin",
                            predvolba = 590
                        },
                        new
                        {
                            ID = 189,
                            NameCountry = "Saint Pierre and Miquelon",
                            predvolba = 508
                        },
                        new
                        {
                            ID = 190,
                            NameCountry = "Saint Vincent and the Grenadines",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 191,
                            NameCountry = "Samoa",
                            predvolba = 685
                        },
                        new
                        {
                            ID = 192,
                            NameCountry = "San Marino",
                            predvolba = 378
                        },
                        new
                        {
                            ID = 193,
                            NameCountry = "SĂŁo TomĂ© and PrĂ­ncipe",
                            predvolba = 239
                        },
                        new
                        {
                            ID = 194,
                            NameCountry = "Saudi Arabia",
                            predvolba = 966
                        },
                        new
                        {
                            ID = 195,
                            NameCountry = "Senegal",
                            predvolba = 221
                        },
                        new
                        {
                            ID = 196,
                            NameCountry = "Serbia",
                            predvolba = 381
                        },
                        new
                        {
                            ID = 197,
                            NameCountry = "Seychelles",
                            predvolba = 248
                        },
                        new
                        {
                            ID = 198,
                            NameCountry = "Sierra Leone",
                            predvolba = 232
                        },
                        new
                        {
                            ID = 199,
                            NameCountry = "Singapore",
                            predvolba = 65
                        },
                        new
                        {
                            ID = 200,
                            NameCountry = "Sint Maarten",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 201,
                            NameCountry = "Slovakia",
                            predvolba = 421
                        },
                        new
                        {
                            ID = 202,
                            NameCountry = "Slovenia",
                            predvolba = 386
                        },
                        new
                        {
                            ID = 203,
                            NameCountry = "Solomon Islands",
                            predvolba = 677
                        },
                        new
                        {
                            ID = 204,
                            NameCountry = "Somalia",
                            predvolba = 252
                        },
                        new
                        {
                            ID = 205,
                            NameCountry = "South Africa",
                            predvolba = 27
                        },
                        new
                        {
                            ID = 206,
                            NameCountry = "South Sudan",
                            predvolba = 211
                        },
                        new
                        {
                            ID = 207,
                            NameCountry = "Spain",
                            predvolba = 34
                        },
                        new
                        {
                            ID = 208,
                            NameCountry = "Sri Lanka",
                            predvolba = 94
                        },
                        new
                        {
                            ID = 209,
                            NameCountry = "St Helena, Ascension, Tristan da Cunha",
                            predvolba = 290
                        },
                        new
                        {
                            ID = 210,
                            NameCountry = "Sudan",
                            predvolba = 249
                        },
                        new
                        {
                            ID = 211,
                            NameCountry = "Suriname",
                            predvolba = 597
                        },
                        new
                        {
                            ID = 212,
                            NameCountry = "Svalbard and Jan Mayen",
                            predvolba = 47
                        },
                        new
                        {
                            ID = 213,
                            NameCountry = "Swaziland",
                            predvolba = 268
                        },
                        new
                        {
                            ID = 214,
                            NameCountry = "Sweden",
                            predvolba = 46
                        },
                        new
                        {
                            ID = 215,
                            NameCountry = "Switzerland",
                            predvolba = 41
                        },
                        new
                        {
                            ID = 216,
                            NameCountry = "Syria",
                            predvolba = 963
                        },
                        new
                        {
                            ID = 217,
                            NameCountry = "Taiwan",
                            predvolba = 886
                        },
                        new
                        {
                            ID = 218,
                            NameCountry = "Tajikistan",
                            predvolba = 992
                        },
                        new
                        {
                            ID = 219,
                            NameCountry = "Tanzania",
                            predvolba = 255
                        },
                        new
                        {
                            ID = 220,
                            NameCountry = "Thailand",
                            predvolba = 66
                        },
                        new
                        {
                            ID = 221,
                            NameCountry = "Timor-Leste",
                            predvolba = 670
                        },
                        new
                        {
                            ID = 222,
                            NameCountry = "Togo",
                            predvolba = 228
                        },
                        new
                        {
                            ID = 223,
                            NameCountry = "Tokelau",
                            predvolba = 690
                        },
                        new
                        {
                            ID = 224,
                            NameCountry = "Tonga",
                            predvolba = 676
                        },
                        new
                        {
                            ID = 225,
                            NameCountry = "Trinidad and Tobago",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 226,
                            NameCountry = "Tunisia",
                            predvolba = 216
                        },
                        new
                        {
                            ID = 227,
                            NameCountry = "Turkey",
                            predvolba = 90
                        },
                        new
                        {
                            ID = 228,
                            NameCountry = "Turkmenistan",
                            predvolba = 993
                        },
                        new
                        {
                            ID = 229,
                            NameCountry = "Turks and Caicos Islands",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 230,
                            NameCountry = "Tuvalu",
                            predvolba = 688
                        },
                        new
                        {
                            ID = 231,
                            NameCountry = "U.S. Outlying Islands",
                            predvolba = 0
                        },
                        new
                        {
                            ID = 232,
                            NameCountry = "U.S. Virgin Islands",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 233,
                            NameCountry = "Uganda",
                            predvolba = 256
                        },
                        new
                        {
                            ID = 234,
                            NameCountry = "Ukraine",
                            predvolba = 380
                        },
                        new
                        {
                            ID = 235,
                            NameCountry = "United Arab Emirates",
                            predvolba = 971
                        },
                        new
                        {
                            ID = 236,
                            NameCountry = "United Kingdom",
                            predvolba = 44
                        },
                        new
                        {
                            ID = 237,
                            NameCountry = "United States",
                            predvolba = 1
                        },
                        new
                        {
                            ID = 238,
                            NameCountry = "Uruguay",
                            predvolba = 598
                        },
                        new
                        {
                            ID = 239,
                            NameCountry = "Uzbekistan",
                            predvolba = 998
                        },
                        new
                        {
                            ID = 240,
                            NameCountry = "Vanuatu",
                            predvolba = 678
                        },
                        new
                        {
                            ID = 241,
                            NameCountry = "Vatican City",
                            predvolba = 39
                        },
                        new
                        {
                            ID = 242,
                            NameCountry = "Venezuela",
                            predvolba = 58
                        },
                        new
                        {
                            ID = 243,
                            NameCountry = "Vietnam",
                            predvolba = 84
                        },
                        new
                        {
                            ID = 244,
                            NameCountry = "Wallis and Futuna",
                            predvolba = 681
                        },
                        new
                        {
                            ID = 245,
                            NameCountry = "World",
                            predvolba = 0
                        },
                        new
                        {
                            ID = 246,
                            NameCountry = "Yemen",
                            predvolba = 967
                        },
                        new
                        {
                            ID = 247,
                            NameCountry = "Zambia",
                            predvolba = 260
                        },
                        new
                        {
                            ID = 248,
                            NameCountry = "Zimbabwe",
                            predvolba = 263
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.TypyDodatku", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("TypDodatku")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("TypyDodatku");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            TypDodatku = "Článek 2 - změna maximálního počtu osob"
                        },
                        new
                        {
                            Id = 2,
                            TypDodatku = "Článek 3 - doba nájmu"
                        },
                        new
                        {
                            Id = 3,
                            TypDodatku = "Článek 4 - cena nájmu a služeb"
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Identity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Roles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ConcurrencyStamp = "9cf14c2c-19e7-40d6-b744-8917505c3106",
                            Name = "Vlastnik_Registrovany",
                            NormalizedName = "VLASTNIK_REGISTROVANY"
                        });
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("longtext");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("longtext");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("varchar(256)");

                    b.Property<DateOnly>("datumNarozeni")
                        .HasColumnType("date");

                    b.Property<int>("idAdres")
                        .HasColumnType("int");

                    b.Property<int>("idPredvolby")
                        .HasColumnType("int");

                    b.Property<string>("rodneCislo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.HasIndex("idAdres");

                    b.HasIndex("idPredvolby");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Identity.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Identity.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.FotoNem", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Entities.ModelNemovitost", "modelNemovitost")
                        .WithMany()
                        .HasForeignKey("Id_Nemo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelNemovitost");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.HistorieCen", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Entities.ModelNemovitost", "modelNemovitost")
                        .WithMany()
                        .HasForeignKey("idNemovitosti")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Entities.MoznostiSluzeb", "moznostiSluzeb")
                        .WithMany()
                        .HasForeignKey("idSluzby")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelNemovitost");

                    b.Navigation("moznostiSluzeb");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelNemovitost", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Entities.ModelAdresa", "adresa")
                        .WithMany()
                        .HasForeignKey("idAdresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Entities.DispoziceNemovitosti", "dispoziceNemovitosti")
                        .WithMany()
                        .HasForeignKey("idDizpozice")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Entities.EnerNarocnostNemovitosti", "enerNarocnost")
                        .WithMany()
                        .HasForeignKey("idEneNarocnosti")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Entities.OptionNemovitost", "optionNemovitost")
                        .WithMany()
                        .HasForeignKey("idTypBudovy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Identity.User", "vlastnik2")
                        .WithMany()
                        .HasForeignKey("idVlastnik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adresa");

                    b.Navigation("dispoziceNemovitosti");

                    b.Navigation("enerNarocnost");

                    b.Navigation("optionNemovitost");

                    b.Navigation("vlastnik2");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelSmlouva", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Entities.Najemnik", "najemnik")
                        .WithMany()
                        .HasForeignKey("idNajemnik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("najemnik");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.ModelZavady", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Entities.Najemnik", "najemnik")
                        .WithMany()
                        .HasForeignKey("idNajemnik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Entities.ModelNemovitost", "modelNemovitost")
                        .WithMany()
                        .HasForeignKey("idNemovitost")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Identity.User", "majitel")
                        .WithMany()
                        .HasForeignKey("idmajitel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("majitel");

                    b.Navigation("modelNemovitost");

                    b.Navigation("najemnik");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Entities.Najemnik", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Entities.ModelAdresa", "modelAdresa")
                        .WithMany()
                        .HasForeignKey("idAdresa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Entities.Predvolby", "predvolby")
                        .WithMany()
                        .HasForeignKey("idPredvolby")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("modelAdresa");

                    b.Navigation("predvolby");
                });

            modelBuilder.Entity("Ney_Nemovitost.web.Models.Identity.User", b =>
                {
                    b.HasOne("Ney_Nemovitost.web.Models.Entities.ModelAdresa", "adresa")
                        .WithMany()
                        .HasForeignKey("idAdres")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Ney_Nemovitost.web.Models.Entities.Predvolby", "predvolby")
                        .WithMany()
                        .HasForeignKey("idPredvolby")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("adresa");

                    b.Navigation("predvolby");
                });
#pragma warning restore 612, 618
        }
    }
}
